
printf("STARTING CDSINIT\n")

; load configuration skill scripts.
let( (configFileList file path saveSkillPath)
    configFileList = '(
                    )
    ; paths of the configuration files.  
    path = strcat(
              ".  ~  "
              prependInstallPath("local ")
             )
    saveSkillPath=getSkillPath()
    setSkillPath(path)

    foreach(file configFileList 
       if(isFile(file) then
          loadi(file)
         )
    )
    setSkillPath(saveSkillPath)
)

; load key bindings scripts
let( (bindKeyFileList file path saveSkillPath)
    bindKeyFileList = '(
                   "leBindKeys.il" 
                   "schBindKeys.il"
                    )
    ; paths of key binding scripts
    path = strcat(
              ".  ~  "
              prependInstallPath("local ")
              prependInstallPath("samples/local")
             )
    saveSkillPath=getSkillPath()
    setSkillPath(path)

    foreach(file bindKeyFileList
       if(isFile(file ) then
          loadi(file)
         )
    )
    setSkillPath(saveSkillPath)
)

sstatus(writeProtect nil)

let((skillPath)
   skillPath= strcat(
    ". ~ "                                          ; Current & home directory
    prependInstallPath("samples/techfile ")         ; sample source technology files
   )
   setSkillPath(skillPath)
)

printf("END OF STANDARD CONFIG SETTINGS\n")

;;Allows you to use multibit buses in stimulus files [#in_bits<0>], [#in_bits<1>], etc
envSetVal("asimenv" "mappingMode" 'string "oss")

; set default editor
editor = "/tools/projects/erichang/programs/core/bin/emacs"


envLoadFile( "./.cdsenv" ) 

envSetVal("asimenv.startup" "projectDir" 'string sprintf( nil "%s/simulation" getShellEnvVar( "BAG_WORK_DIR" ) ) )


; setup calibre/virtuoso interface
; load(strcat(getShellEnvVar("MGC_HOME") "/lib/calibre.skl"))
; mgc_rve_init_socket(9190)

; load(strcat(getShellEnvVar("BDA_ROOT") "/3rdParty/cdsinit-bda"))

; cdlOutKeys = list(nil
; 	'incFILE                   "$BAG_TECH_CONFIG_DIR/calibre_rcx_setup/source.added"
; )

;have CDF term Order update whenever the symbol is updated
envSetVal("auCore.misc" "updateCDFtermOrder" 'boolean t)

envSetVal("ihdl" "maxNetNameLength" `int 16000)

; Lorentz Peakview installation
; let((t_pvPath t_file)
;         t_pvPath = getShellEnvVar("PEAKHOME")
;         when(t_pvPath
;                 t_file = strcat(t_pvPath "/cds/context/pkv.cxt")
;                 when(isFile(t_file) loadContext(t_file))
;                 t_file = strcat(t_pvPath "/cds/context/pkview.ini")
;                 when(isFile(t_file) load(t_file))
; 
;         )
; )

; emx init
; load(strcat(getShellEnvVar("PWD") "/EMX/emxinterface/.cdsinit"))

; open library manager
ddsOpenLibManager()

; resize CIW window
hiResizeWindow(window(1) list(540:100 1260:480))

printf("END OF CUSTOM CONFIG SETTINGS\n")

